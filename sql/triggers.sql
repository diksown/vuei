CREATE OR REPLACE FUNCTION check_piloto_turista_overlap()
RETURNS TRIGGER AS $$
DECLARE
    overlap VARCHAR(50);
BEGIN
    SELECT PILOTO INTO overlap
    FROM EXPEDICAO
    WHERE NAVE = NEW.NAVE AND DH_INICIO = NEW.DH_INICIO AND PILOTO = NEW.TURISTA;

    IF overlap IS NOT NULL THEN
        RAISE EXCEPTION 'ERRO DE INSERCAO. PILOTO JA REGISTRADO';
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER TG_PILOTO_TURISTA_BEFORE_INSERT
BEFORE INSERT ON EXPEDICAO_TURISTA
FOR EACH ROW EXECUTE FUNCTION check_piloto_turista_overlap();

CREATE OR REPLACE FUNCTION check_colonia_conflict()
RETURNS TRIGGER AS $$
DECLARE
    overlap VARCHAR(50);
BEGIN
    SELECT FACCAO_NOME INTO overlap
    FROM COLONIA
    WHERE FACCAO_NOME = NEW.FACCAO_NOME AND NOME_PLANETA = NEW.NOME_PLANETA AND 
    ((NEW.DH_INICIO BETWEEN DH_INICIO AND DH_FIM) OR (NEW.DH_FIM BETWEEN DH_INICIO AND DH_FIM));

    IF overlap IS NOT NULL THEN
        RAISE EXCEPTION 'ERRO DE INSERCAO. COLONIA JA REGISTRADA';
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER TG_COLONIA_CONFLICT_BEFORE_INSERT
BEFORE INSERT ON COLONIA
FOR EACH ROW EXECUTE FUNCTION check_colonia_conflict();
